{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","servises/user.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","getUserById","usersFromServer","find","TodoInfo","todo","cn","TodoList","todos","map","App","useState","setTitle","hasTitleError","setHasTitleError","todosFromServer","setTodos","setUserId","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","trim","todosArr","newTodo","Math","max","currentTodos","htmlFor","placeholder","type","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69a44e74.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../servises/user';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { completed, title } = todo;\n\n  const user = getUserById(todo.userId);\n\n  return (\n    <article className={cn('TodoInfo', {\n      'TodoInfo--completed': completed === true,\n    })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      { user && (\n        <UserInfo user={user} />\n      ) }\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todo';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { getUserById } from './servises/user';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const [userId, setUserId] = useState(0);\n\n  const [hasUserError, setHasUserError] = useState(false);\n\n  function getNewTodoId(todosArr: Todo[]) {\n    const maxId = Math.max(\n      ...todosArr.map(todo => todo.id),\n    );\n\n    return maxId + 1;\n  }\n\n  const onSubmit = (todo: TodoWithUser) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      title,\n      id: 0,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n          >\n            {'Title: '}\n          </label>\n          <input\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"user\"\n          >\n            {'User: '}\n          </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((userFromServer) => (\n              <option\n                value={userFromServer.id}\n                key={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}